name: Go Release
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # Manual trigger

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Determine version tag
      id: get_tag
      run: |
        # Check if any tags exist
        if git tag | grep -q "^v[0-9]"; then
          # Get the latest tag and increment the patch version
          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "Found latest tag: $latest_tag"
          
          # Parse the version numbers
          major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
        else
          # No tags exist, start with v0.0.1
          echo "No existing version tags found, starting with v0.0.1"
          new_tag="v0.0.1"
        fi
        
        echo "Version tag will be: $new_tag"
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Set git user
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Create and push new tag
      run: |
        echo "Creating and pushing tag: ${{ steps.get_tag.outputs.new_tag }}"
        git tag ${{ steps.get_tag.outputs.new_tag }}
        git push origin ${{ steps.get_tag.outputs.new_tag }}

    - name: Build Go binaries for multiple platforms
      run: |
        mkdir -p dist
        # Linux
        GOOS=linux GOARCH=amd64 go build -o dist/ssh-x-term-linux-amd64 ./cmd/ssh-x-term
        # macOS
        GOOS=darwin GOARCH=amd64 go build -o dist/ssh-x-term-darwin-amd64 ./cmd/ssh-x-term
        # Add ARM64 builds for broader compatibility
        GOOS=linux GOARCH=arm64 go build -o dist/ssh-x-term-linux-arm64 ./cmd/ssh-x-term
        GOOS=darwin GOARCH=arm64 go build -o dist/ssh-x-term-darwin-arm64 ./cmd/ssh-x-term

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.new_tag }}
        name: Release ${{ steps.get_tag.outputs.new_tag }}
        files: |
          dist/ssh-x-term-linux-amd64
          dist/ssh-x-term-darwin-amd64
          dist/ssh-x-term-linux-arm64
          dist/ssh-x-term-darwin-arm64
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
