name: Go Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # Manual trigger

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Determine next available tag
      id: get_next_tag
      run: |
        # Get latest tag or default to v0.0.0 if no tags exist
        latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1 || echo "v0.0.0")
        
        # If no tags exist, start from v0.0.1
        if [ "$latest_tag" == "v0.0.0" ]; then
          new_tag="v0.0.1"
        else
          clean_tag="${latest_tag#v}"
          IFS='.' read -r major minor patch <<< "$clean_tag"

          # Ensure that patch is always an integer
          if [ -z "$patch" ]; then
            patch=0
          fi

          # Increment patch version
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
        fi

        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Set git user
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Create and push new tag
      run: |
        git tag ${{ steps.get_next_tag.outputs.new_tag }}
        git push origin ${{ steps.get_next_tag.outputs.new_tag }}

    - name: Build Go binaries for multiple platforms
      run: |
        mkdir -p dist

        # Linux
        GOOS=linux GOARCH=amd64 go build -o dist/ssh-x-term-linux-amd64 ./cmd/ssh-x-term

        # Windows
        GOOS=windows GOARCH=amd64 go build -o dist/ssh-x-term-windows-amd64.exe ./cmd/ssh-x-term

        # macOS
        GOOS=darwin GOARCH=amd64 go build -o dist/ssh-x-term-darwin-amd64 ./cmd/ssh-x-term

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_next_tag.outputs.new_tag }}
        name: Release ${{ steps.get_next_tag.outputs.new_tag }}
        files: |
          dist/ssh-x-term-linux-amd64
          dist/ssh-x-term-windows-amd64.exe
          dist/ssh-x-term-darwin-amd64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
